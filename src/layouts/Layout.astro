---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Software Developer" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta property="og:title" content="Oscar Hernandez" />
    <meta property="og:description" content="Software Developer" />
    <meta property="og:image" content="https://oscarhernandez.vercel.app/og.image.png" />
    <meta property="og:url" content="https://oscarhernandez.vercel.app" />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Oscar Hernandez Portfolio" />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      rel="preload"
      as="style"
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
    />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
      media="print"
      onload="this.media='all'"
    />
    <noscript>
      <link
        rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap"
      />
    </noscript>

    <title>{title}</title>
  </head>
  <body class="bg-[--background] md:px-48 lg:px-20 px-9">
    <slot />
  </body>
</html>

<style is:global>
  :root {
    --background: #0a0a0a;
    --sec: #00FFFF;
    --white: #ffffff;
    --white-icon: #f3f3f398;
    --white-icon-tr: #f3f3f310;
  }

  body {
    position: relative;
    background-color: var(--background);
    overflow-x: hidden;
    background-image: url('/teal.png');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
  }

  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    pointer-events: none;
    background: 
      radial-gradient(circle at 20% 30%, rgba(0, 255, 255, 0.05) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, rgba(0, 255, 255, 0.05) 0%, transparent 50%),
      radial-gradient(circle at 50% 50%, rgba(0, 255, 255, 0.03) 0%, transparent 70%),
      linear-gradient(45deg, rgba(0, 0, 0, 0.85) 0%, rgba(10, 10, 10, 0.85) 100%);
    animation: gradientShift 20s ease infinite;
  }

  body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    pointer-events: none;
    background-image:
      radial-gradient(circle at 20% 30%, rgba(0, 255, 255, 0.03) 1px, transparent 1px),
      radial-gradient(circle at 70% 80%, rgba(0, 255, 255, 0.03) 1px, transparent 1px),
      radial-gradient(circle at 50% 10%, rgba(0, 255, 255, 0.03) 1px, transparent 1px),
      radial-gradient(circle at 10% 90%, rgba(0, 255, 255, 0.03) 1px, transparent 1px),
      radial-gradient(circle at 30% 50%, rgba(0, 255, 255, 0.02) 1px, transparent 1px),
      radial-gradient(circle at 60% 20%, rgba(0, 255, 255, 0.02) 1px, transparent 1px);
    background-repeat: repeat;
    background-size: 150px 150px;
    animation: particleDrift 60s linear infinite;
    opacity: 0.4;
    mix-blend-mode: overlay;
  }

  /* Ajout d'un effet de grille futuriste */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -2;
    pointer-events: none;
    background-image: 
      linear-gradient(rgba(0, 255, 255, 0.03) 1px, transparent 1px),
      linear-gradient(90deg, rgba(0, 255, 255, 0.03) 1px, transparent 1px);
    background-size: 50px 50px;
    animation: gridMove 20s linear infinite;
    opacity: 0.2;
    mix-blend-mode: overlay;
  }

  @keyframes gradientShift {
    0% {
      background-position: 0% 0%;
      filter: hue-rotate(0deg) blur(0.5px);
    }
    50% {
      background-position: 100% 100%;
      filter: hue-rotate(5deg) blur(0.5px);
    }
    100% {
      background-position: 0% 0%;
      filter: hue-rotate(0deg) blur(0.5px);
    }
  }

  @keyframes particleDrift {
    0% { 
      background-position: 0 0;
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
    100% { 
      background-position: 150px 150px;
      transform: scale(1);
    }
  }

  @keyframes gridMove {
    0% {
      background-position: 0 0;
    }
    100% {
      background-position: 50px 50px;
    }
  }

  /* Effet de lueur sur les éléments interactifs */
  a, button {
    transition: all 0.3s ease;
  }

  a:hover, button:hover {
    text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  }

  * {
    font-family:
      "montserrat",
      -apple-system,
      system-ui,
      sans-serif;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
  }

  *::selection {
    background-color: var(--sec);
    color: var(--background);
  }

  /* Scrollbar styles */

  ::-webkit-scrollbar {
    width: 15px;
  }

  ::-webkit-scrollbar-track {
    background: #1a1a1a; /* Darker background for the track */
    border-radius: 30px;
  }

  ::-webkit-scrollbar-thumb {
    background: #FFD700; /* Yellow thumb */
    border-radius: 10px;
    border: 3px solid #1a1a1a; /* Border to match track */
  }

  ::-webkit-scrollbar-thumb:hover {
    background: #00FFFF; /* Cyan on hover */
  }

  /* Scrollbar styles for Firefox */
  * {
    scrollbar-width: thin;
    scrollbar-color: #00FFFF #1a1a1a; /* Cyan thumb, darker track for Firefox */
  }
</style>
